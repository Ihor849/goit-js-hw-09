{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,0BA2BjC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA9BbV,EAAKC,OAAOgB,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAEC,iBAEF,MAAMC,EAAYC,OAAOrB,EAAKI,WAAWkB,OACzC,IAAIC,EAAaF,OAAOrB,EAAKK,UAAUiB,OACvC,MAAME,EAASH,OAAOrB,EAAKM,YAAYgB,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGF,GACdG,MAAK,EAACjB,SAAEA,EAAQkB,WAAEA,MACjBC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBL,QAAUE,MAAe,IAEvEI,OAAM,EAACtB,SAAEA,EAAQkB,WAAEA,MAClBC,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBP,QAAQE,MAAe,IAEvEJ,GAAcH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button[type=\"submit\"]'),\n};\n// refs.formEl.addEventListener('input', e => {\n//   console.log(e);\n// });\n\nrefs.formEl.addEventListener('submit', submitCreatePromise);\n\nfunction submitCreatePromise(e) {\n  e.preventDefault();\n\n  const delayStep = Number(refs.inputDelay.value);\n  let delayFirst = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayFirst)\n      .then(({ position, delayFirst }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delayFirst}ms`);\n      })\n      .catch(({ position, delayFirst }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delayFirst}ms`);\n      });\n    delayFirst += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputDelay","inputStep","inputAmount","button","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delayStep","Number","value","delayFirst1","amount","i","then","delayFirst","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.563042f3.js.map"}