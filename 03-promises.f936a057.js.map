{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,OAAQL,SAASC,cAAc,0BAGjCH,EAAKC,OAAOO,iBAAiB,UAE7B,SAA6BC,G,kBAoB7B,IAAuBC,EAAUN,GAAVM,EAZLC,EAYeP,EAZZQ,EAaZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEJ,WAAUN,UAEpBW,EAAO,CAAEL,WAAUN,S,GAEpBA,E,KApBAe,MAAK,SAAAC,GAAWA,EAARV,S,IAAUN,EAAKgB,EAALhB,MACjBiB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAiCC,OAARb,EAAE,QAAYa,OAANpB,EAAM,QAC7DqB,QAAMC,IAAItB,E,IAEbuB,OAAM,SAAAP,GAAWA,EAARV,S,IAAUN,EAAKgB,EAALhB,MAClBiB,EAAAvB,GAASwB,OAAOM,QAAQ,sBAA8BJ,OAARb,EAAE,QAAYa,OAANpB,EAAM,O,IAEhEQ,GAASP,C,EAfXI,EAAEoB,iBAMF,IAJA,IAAIjB,EAAQkB,OAAO9B,EAAKI,MAAM2B,OACxB1B,EAAOyB,OAAO9B,EAAKK,KAAK0B,OACxBzB,EAASwB,OAAO9B,EAAKM,OAAOyB,OAEzBC,EAAI,EAAGA,GAAK1B,EAAQ0B,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.formEl.addEventListener('submit', submitCreatePromise);\n\nfunction submitCreatePromise(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay} ms`);\n        console.log(delay);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay} ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delay","step","amount","button","addEventListener","e","position","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.f936a057.js.map"}