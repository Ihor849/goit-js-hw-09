{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,OAAQL,SAASC,cAAc,0BAyBjC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CA/BbJ,EAAKC,OAAOe,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC9B,MAAMhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAElC,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAQgB,GAAK,EAChCd,EAAcc,EAAGH,GACdI,MAAK,EAACd,SAAEA,EAAQL,MAAEA,MACjBoB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBJ,QAAUlB,QACrDuB,QAAMC,IAAIxB,EAAM,IAEnByB,OAAM,EAACpB,SAAEA,EAAQL,MAAEA,MAClBoB,EAAA1B,GAAS2B,OAAOK,QAAQ,sBAAoBR,QAAQlB,OAAW,IAEnEe,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.formEl.addEventListener('submit', submitCreatePromise);\n\nfunction submitCreatePromise(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay} ms`);\n        console.log(delay);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay} ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delay","step","amount","button","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.dc0ad1bf.js.map"}